import java.util.*;

public class Board {

	static int[] array1 = {1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,
			1, 2, 3 , 4 , 4, 4,4 ,4,4, 4,4,4,4,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,9,10
			
 };
	HashMap<Integer, Integer> map1 = new HashMap<Integer, Integer>();

	public static void main(String[] args) {

		Board pointer1 = new Board();

		pointer1.pipeline(array1);

	}

	public HashMap<Integer, Integer> pipeline(int[] array) {

		map1 = movefunction_array_to_map1(array);

	

		return map1;

	}

   public int Freq_Calculation(int temp_element , int[]array)
   {
	  
            int freq=0;
		for (int j = 0; j < array.length; j++) {
			
			if (temp_element == array[j])

			{
				freq++;
			}

		}
	   
	   return freq;
   }

public void read_map(HashMap<Integer, Integer> map1) {

		// System.out.println(map1.size());
		Iterator it = map1.entrySet().iterator();
		while (it.hasNext()) {
			Map.Entry pair = (Map.Entry) it.next();

			System.out.println(pair.getKey() + ":" + "    No of Times = " + pair.getValue());
			it.remove(); // avoids a ConcurrentModificationException
		}

	}

	public HashMap<Integer, Integer> movefunction_array_to_map1(int[] array) {

		for (int element = 0; element < array.length; element++)

		{
		
			 //Create  two temp variable
			int temp_element = 0;
			int freq ;
			temp_element = array[element];
			
			
			
		      freq = Freq_Calculation(temp_element ,  array );

			map1.put(array[element], freq);

		}
	
		//Hello
		
		read_map(map1);
		 return map1;
	}
}

